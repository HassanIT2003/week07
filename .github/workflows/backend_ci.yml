# week07/.github/workflows/backend_ci.yml

name: Backend CI - Test, Build and Push Images to ACR

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend_ci.yml'

env:
  # short registry name (no domain)
  ACR_NAME: sit722w07465947226
  # full registry FQDN from repo secret (e.g., sit722w07465947226.azurecr.io)
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  test_and_lint_backends:
    runs-on: ubuntu-latest

    services:
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          for req in backend/*/requirements.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
          pip install pytest httpx

      - name: Run product_service tests
        working-directory: backend/product_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

      - name: Run order_service tests
        working-directory: backend/order_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

  build_and_push_images:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # If you prefer, you can remove this step (docker push works after azure/login),
      # but keeping it is fine too.
      - name: Login to Azure Container Registry
        run: az acr login --name ${{ env.ACR_NAME }}

      # Optional: show folders to confirm paths
      - name: Show backend tree
        run: |
          pwd
          ls -la backend
          ls -la backend/product_service
          ls -la backend/order_service

      # Build locally, then tag & push to ACR (avoids secret masking issues)
      - name: Build Product Service (local)
        working-directory: backend/product_service
        run: |
          DOCKER_BUILDKIT=0 docker build -t product_service:latest .

      - name: Tag & Push Product Service to ACR
        run: |
          docker tag product_service:latest ${{ env.ACR_LOGIN_SERVER }}/product_service:latest
          docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:latest

      - name: Build Order Service (local)
        working-directory: backend/order_service
        run: |
          DOCKER_BUILDKIT=0 docker build -t order_service:latest .

      - name: Tag & Push Order Service to ACR
        run: |
          docker tag order_service:latest ${{ env.ACR_LOGIN_SERVER }}/order_service:latest
          docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:latest

      - name: Logout from Azure
        if: always()
        run: az logout
